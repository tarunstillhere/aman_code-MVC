<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Listen">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Listen">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register">
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.path">/listen/index/submit</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="user[username]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Tarun</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[username]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[email]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">tarun94@amityonline.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[email]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[password]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Tarun@123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[password]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[countryCode]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">+91</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[countryCode]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[phoneNumber]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">08595808987</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[phoneNumber]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[gender]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Male</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[gender]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[dob]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2008-09-08</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[dob]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[address]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">UttamNagar</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[address]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[language]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">English</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[language]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
              <elementProp name="user[status]" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">both</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user[status]</stringProp>
                <stringProp name="HTTPArgument.content_type">application/x-www-form-urlencoded </stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="&quot;Accept&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Accept&quot;</stringProp>
                <stringProp name="Header.value">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Accept-Language&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Accept-Language&quot;</stringProp>
                <stringProp name="Header.value">&quot;en-IN,en-US;q=0.9,en-GB;q=0.8,en;q=0.7&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Cache-Control&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Cache-Control&quot;</stringProp>
                <stringProp name="Header.value">&quot;max-age=0&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Connection&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Connection&quot;</stringProp>
                <stringProp name="Header.value">&quot;keep-alive&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Content-Type&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Content-Type&quot;</stringProp>
                <stringProp name="Header.value">&quot;application/x-www-form-urlencoded &quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Cookie&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Cookie&quot;</stringProp>
                <stringProp name="Header.value">&quot;connect.sid=s%3Am9L1viq7Qa_jyWC9k9HcOFH9e25csQMz.e4978E9KYek2qeerZ3hmvfPaDImj7K07cy93D0ZHJFI; connect.sid=s%3ASaJ_CXfPyd9tQO4hxJQOk50QNNKQOqZc.eGcO1aczor0rhvH7Io5Tu9cUQgIG4dSLCbedCYExVbg&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Origin&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Origin&quot;</stringProp>
                <stringProp name="Header.value">&quot;http://localhost:8080&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Referer&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Referer&quot;</stringProp>
                <stringProp name="Header.value">&quot;http://localhost:8080/listen/index/register?&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Sec-Fetch-Dest&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Sec-Fetch-Dest&quot;</stringProp>
                <stringProp name="Header.value">&quot;document&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Sec-Fetch-Mode&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Sec-Fetch-Mode&quot;</stringProp>
                <stringProp name="Header.value">&quot;navigate&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Sec-Fetch-Site&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Sec-Fetch-Site&quot;</stringProp>
                <stringProp name="Header.value">&quot;same-origin&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Sec-Fetch-User&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Sec-Fetch-User&quot;</stringProp>
                <stringProp name="Header.value">&quot;?1&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;Upgrade-Insecure-Requests&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;Upgrade-Insecure-Requests&quot;</stringProp>
                <stringProp name="Header.value">&quot;1&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;User-Agent&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;User-Agent&quot;</stringProp>
                <stringProp name="Header.value">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;sec-ch-ua&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;sec-ch-ua&quot;</stringProp>
                <stringProp name="Header.value">&quot;\&quot;Not)A;Brand\&quot;;v=\&quot;99\&quot;, \&quot;Google Chrome\&quot;;v=\&quot;127\&quot;, \&quot;Chromium\&quot;;v=\&quot;127\&quot;&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;sec-ch-ua-mobile&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;sec-ch-ua-mobile&quot;</stringProp>
                <stringProp name="Header.value">&quot;?0&quot;,</stringProp>
              </elementProp>
              <elementProp name="&quot;sec-ch-ua-platform&quot;" elementType="Header">
                <stringProp name="Header.name">&quot;sec-ch-ua-platform&quot;</stringProp>
                <stringProp name="Header.value">&quot;\&quot;macOS\&quot;&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
